{"ast":null,"code":"var _jsxFileName = \"/home/murilocht/Documentos/projetos/reactjs/uploadexample/frontend/src/components/Upload/index.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMessageDrag = (isDragActive, isDragReject) => {\n      if (!isDragActive) {\n        return React.createElement(UploadMessage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, \"Arraste arquivos aqui...\");\n      }\n\n      if (isDragReject) {\n        return React.createElement(UploadMessage, {\n          type: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Arquivo n\\xE3o suportado\");\n      }\n\n      return React.createElement(UploadMessage, {\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Solte os arquivos aqui\");\n    };\n  }\n\n  render() {\n    const onUpload = this.props.onUpload;\n    return React.createElement(Dropzone, {\n      accept: \"image/*\",\n      onDropAccepted: onUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), this.renderMessageDrag(isDragActive, isDragReject)));\n  }\n\n}","map":{"version":3,"sources":["/home/murilocht/Documentos/projetos/reactjs/uploadexample/frontend/src/components/Upload/index.js"],"names":["React","Component","Dropzone","DropContainer","UploadMessage","Upload","renderMessageDrag","isDragActive","isDragReject","render","onUpload","props","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC1CK,iBAD0C,GACtB,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAChD,UAAI,CAACD,YAAL,EAAmB;AACf,eAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACH;;AAED,UAAIC,YAAJ,EAAkB;AACd,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACH;;AAED,aAAO,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH,KAXyC;AAAA;;AAa1CC,EAAAA,MAAM,GAAG;AAAA,UACGC,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAGL,WACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,cAAc,EAAEA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,CAAC;AAAEE,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BN,MAAAA,YAA/B;AAA6CC,MAAAA;AAA7C,KAAD,KACE,oBAAC,aAAD,oBACQI,YAAY,EADpB;AAEI,MAAA,YAAY,EAAEL,YAFlB;AAGI,MAAA,YAAY,EAAEC,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKI,+CAAWK,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ,EAOK,KAAKP,iBAAL,CAAuBC,YAAvB,EAAqCC,YAArC,CAPL,CAFR,CADJ;AAeH;;AA/ByC","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport { DropContainer, UploadMessage } from './styles';\n\nexport default class Upload extends Component {\n    renderMessageDrag = (isDragActive, isDragReject) => {\n        if (!isDragActive) {\n            return <UploadMessage>Arraste arquivos aqui...</UploadMessage>\n        }\n\n        if (isDragReject) {\n            return <UploadMessage type=\"error\">Arquivo n√£o suportado</UploadMessage>\n        }\n\n        return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>\n    };\n\n    render() {\n        const { onUpload } = this.props;\n\n        return (\n            <Dropzone accept=\"image/*\" onDropAccepted={onUpload}>\n                { ({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n                    <DropContainer \n                        {...getRootProps()}\n                        isDragActive={isDragActive}\n                        isDragReject={isDragReject}\n                    >\n                        <input {...getInputProps()}/>\n\n                        {this.renderMessageDrag(isDragActive, isDragReject)}\n                    </DropContainer>\n                ) }\n            </Dropzone>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}