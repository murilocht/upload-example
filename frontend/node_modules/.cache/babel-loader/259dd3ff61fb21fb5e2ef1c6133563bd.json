{"ast":null,"code":"var _jsxFileName = \"/home/murilocht/Documentos/projetos/reactjs/uploadexample/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport GlobalStyle from './styles/global';\nimport { Container, Content } from './styles';\nimport Upload from './components/Upload';\nimport FileList from './components/FileList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uploadedFiles: []\n    };\n\n    this.handleUpload = files => {\n      const uploadedFiles = files.map(file => ({\n        file,\n        id: uniqueId(),\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: URL.createObjectURL(file),\n        progress: 0,\n        uploaded: false,\n        url: null\n      }));\n      this.setState({\n        uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n      });\n    };\n  }\n\n  render() {\n    const uploadedFiles = this.state.uploadedFiles;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      onUpload: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), !!uploadedFiles.length && React.createElement(FileList, {\n      files: uploadedFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/murilocht/Documentos/projetos/reactjs/uploadexample/frontend/src/App.js"],"names":["React","Component","uniqueId","filesize","GlobalStyle","Container","Content","Upload","FileList","App","state","uploadedFiles","handleUpload","files","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","url","setState","concat","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,aAAa,EAAE;AADT,KADkB;;AAAA,SAK1BC,YAL0B,GAKXC,KAAK,IAAI;AACtB,YAAMF,aAAa,GAAGE,KAAK,CAACC,GAAN,CAAUC,IAAI,KAAK;AACvCA,QAAAA,IADuC;AAEvCC,QAAAA,EAAE,EAAEd,QAAQ,EAF2B;AAGvCe,QAAAA,IAAI,EAAEF,IAAI,CAACE,IAH4B;AAIvCC,QAAAA,YAAY,EAAEf,QAAQ,CAACY,IAAI,CAACI,IAAN,CAJiB;AAKvCC,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CAL8B;AAMvCQ,QAAAA,QAAQ,EAAE,CAN6B;AAOvCC,QAAAA,QAAQ,EAAE,KAP6B;AAQvCC,QAAAA,GAAG,EAAE;AARkC,OAAL,CAAd,CAAtB;AAWA,WAAKC,QAAL,CAAc;AACZf,QAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyBgB,MAAzB,CAAgChB,aAAhC;AADH,OAAd;AAGD,KApByB;AAAA;;AAsB1BiB,EAAAA,MAAM,GAAG;AAAA,UACCjB,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAGP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,CAAC,CAACD,aAAa,CAACkB,MAAhB,IACA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AArCyB;;AAwC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\n\nimport GlobalStyle from './styles/global';\nimport { Container, Content } from './styles';\n\nimport Upload from './components/Upload';\nimport FileList from './components/FileList';\n\nclass App extends Component {\n  state = {\n    uploadedFiles: []\n  };\n\n  handleUpload = files => {\n    const uploadedFiles = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      url: null\n    }))\n\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n    });\n  };\n\n  render() {\n    const { uploadedFiles } = this.state;\n\n    return (\n      <Container>\n        <Content>\n          <Upload onUpload={this.handleUpload}/>\n          { !!uploadedFiles.length && (\n            <FileList files={uploadedFiles}/>\n          ) } \n        </Content>\n\n        <GlobalStyle />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}